DEBUG CODE FRAGMENTS
	gl_FragColor = vec4(0.1,0.1,0.1,1);
	if(gl_FragCoord.x > lights[0].position.x) {
		gl_FragColor += vec4(0.5f,0,0,0);
	} else {
		gl_FragColor += vec4(0,0,0,0);
	}
	
	if(gl_FragCoord.y > lights[0].position.y) {
		gl_FragColor += vec4(0.0,0,0.5f,0);
	}
	
	
	
	
	
	
	
	
	gl_FragColor += lights[0].color * brightness(
											lights[0].intensity, 
											vec2(	gl_FragCoord.x/gl_FragCoord.w + worldPosition.x, 
													gl_FragCoord.y/gl_FragCoord.w + worldPosition.y), 
											lights[0].position);
											
											
											
											
											
											
											
											
											
											
			vec4 worldSpacePositionOfScreenFragment = inverseProjectionMatrix * vec4(texCoord.xy * 2.0 - 1.0, 0.0, 1.0);
    vec3 processingPosition = vec3(worldSpacePositionOfScreenFragment.xyz/worldSpacePositionOfScreenFragment.w);
    
    gl_FragColor = vec4(0.1,0.1,0.1,1);
    gl_FragColor = v_color * texture2D(u_texture, v_texCoords);
    
    
    
    
    gl_FragColor = vec4(0.1,0.1,0.1,1);
	
	for ( int i = 0; i < totalLights; i++ ) {
		gl_FragColor += lights[i].color * brightness(lights[i].intensity, vec2(worldSpacePositionOfScreenFragment.xy), lights[i].position);
	}	
   	gl_FragColor *= v_color * texture2D(u_texture, v_texCoords);								
											
											
											
											
											
											
											
											
											
											
											
											
											
											
											
											
											
											
											
											
											
											
											
											